# read commit message. 'deploy dev'
# deploy to stg env
name: deploy dev
on: push

env:
  IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/hushhub-backend:${{ github.sha }}
  # IMAGE_TAG: bro/hushhub-backend:${{ github.sha }}
  CONTAINER_NAME: "hushhub-backend"
  # CONTAINER_PORT: 5000
  # HOST_PORT: 5000
  # ENV_FILE: .env.stg

jobs:
  check_msg:
    runs-on: [ ubuntu-latest ]
    outputs:
      run_next: ${{ steps.msg_checker.outputs.run_next }}
    steps:
      - name: check commit message
        id: msg_checker
        if: contains(github.event.head_commit.message, 'deploy-dev')
        run: |
          echo "run_next=true" >> "$GITHUB_OUTPUT"

  deploy_dev:
    # if: ${{ always() && contains(join(needs.*.result, ','), 'ok') }}
    if: contains(needs.check_msg.outputs.run_next, 'true')
    needs: check_msg
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: cd app ; docker build -t ${{env.IMAGE_TAG}} .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{env.IMAGE_TAG}}
      
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > ssh_key.pem
          chmod 400 ssh_key.pem
      - name: Download the .env file
        run: |
          echo "${{ secrets.DEV_ENV_VARS }}" > .env
      
      - name: Deploy project
        run: |
          echo "send the .env file to the server first"
          scp -i ssh_key.pem .env ec2-user@${{ secrets.DEV_SERVER_IP }}:~/"
          # ssh -i ssh_key.pem ec2-user@${{ secrets.DEV_SERVER_IP }} 'sudo docker stop cddemo || true'

        
      
      # - name: Connect to server via SSH
      #   uses: appleboy/ssh-action@master
      #   with:
      #       host: ${{ secrets.DEV_SERVER_IP }}
      #       username: ${{ secrets.DEV_SERVER_USERNAME }}
      #       key: ${{ secrets.SSH_PRIVATE_KEY }}
      #       passphrase: ${{ secrets.DEV_SERVER_PASSWORD }}
      #       password: ${{ secrets.DEV_SERVER_PASSWORD }}
      #       script: |
      #         echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login --username=${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      #         docker stop ${{env.CONTAINER_NAME}} && docker rm ${{env.CONTAINER_NAME}} || true
      #         docker run --env-file ${{env.ENV_FILE}} -d --name ${{env.CONTAINER_NAME}} -p ${{env.HOST_PORT}}:${{env.CONTAINER_PORT}} --restart always ${{env.IMAGE_TAG}}